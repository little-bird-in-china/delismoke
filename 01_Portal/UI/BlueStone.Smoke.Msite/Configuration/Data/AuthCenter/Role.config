<?xml version="1.0" encoding="utf-8"?>
<SQLConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <SQLList>
    <!-- 删除Role信息:更改为删除状态-999 -->
    <SQL SQLKey="DeleteRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                 UPDATE smoke.Role SET Status=-1 WHERE SysNo = @SysNo
		          ]]>
      </Text>
    </SQL>
    
    <!-- 创建Role信息 -->
    <SQL SQLKey="InsertRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                INSERT INTO smoke.Role
                (
                `RoleName`,
                `Memo`,
                `CommonStatus`,
                `ApplicationID`,
                `InUserSysNo`,
                `InUserName`,
                `InDate`

                ) 
                VALUES 
                (
                @RoleName,
                @Memo,
                @CommonStatus,
                @ApplicationID,
                @InUserSysNo,
                @InUserName,
                NOW()

                );

                SELECT LAST_INSERT_ID() AS  SysNo;
          ]]>
      </Text>
    </SQL>

    <!-- 更新Role信息 -->
    <SQL SQLKey="UpdateRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
            UPDATE smoke.Role SET 
                `RoleName` = @RoleName,
                `CommonStatus` = @CommonStatus,
                `Memo` = @Memo,
                `EditUserSysNo` = @EditUserSysNo,
                `EditUserName` = @EditUserName,
                `EditDate` = NOW()
            WHERE SysNo = @SysNo
          ]]>
      </Text>
    </SQL>

    <!-- 通过状态加载Role信息 -->
    <SQL SQLKey="LoadRoleByCommonStatus" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                SELECT 
                `SysNo`,
                `RoleName`,
                `Memo`,
                `CommonStatus`,
                `ApplicationID`,
                `InUserSysNo`,
                `InUserName`,
                `InDate`,
                `EditUserSysNo`,
                `EditUserName`,
                `EditDate`
 
                FROM smoke.Role
                WHERE CommonStatus = @CommonStatus AND ApplicationID = @ApplicationID
          ]]>
      </Text>
    </SQL>


    <!-- 加载Role信息 -->
    <SQL SQLKey="LoadRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                SELECT 
                `SysNo`,
                `RoleName`,
                `Memo`,
                `CommonStatus`,
                `ApplicationID`,
                `InUserSysNo`,
                `InUserName`,
                `InDate`,
                `EditUserSysNo`,
                `EditUserName`,
                `EditDate`
 
                FROM smoke.Role
                WHERE SysNo = @SysNo
          ]]>
      </Text>
    </SQL>
    <!-- 加载User_Role信息 -->
    <SQL SQLKey="LoadUserRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                SELECT 
               *
 
                FROM smoke.user_role
                WHERE UserSysNo = @UserSysNo
          ]]>
      </Text>
    </SQL>

    <!-- 分页查询Role信息 -->
    <SQL SQLKey="QueryRoleList" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
        
        SELECT
        SQL_CALC_FOUND_ROWS
                r.`SysNo`,
                r.`RoleName`,
                r.`Memo`,
                r.`CommonStatus`,
                r.`ApplicationID`,
                r.`InUserSysNo`,
                r.`InUserName`,
                r.`InDate`,
                r.`EditUserSysNo`,
                r.`EditUserName`,
                r.`EditDate`,
                a.`Name` as ApplicationName
        FROM smoke.Role as r
        inner join smoke.SystemApplication as a on a.ApplicationID = r.ApplicationID
        #STRWHERE# ORDER BY @SortFields 
        LIMIT @StartNumber, @PageSize;
        
        SELECT FOUND_ROWS() AS TotalCount ;
            ]]>
      </Text>
    </SQL>

    <SQL SQLKey="DeleteRoleBatch" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                 UPDATE smoke.Role SET CommonStatus=-1 WHERE SysNo in ( #BatchSysNo# );
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="UpdateRoleStatusBatch" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                 UPDATE smoke.Role SET CommonStatus=@Status WHERE SysNo in ( #BatchSysNo# );
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="GetAllRolesByApplicationID" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                 Select * From smoke.Role Where ApplicationID = @ApplicationID And CommonStatus>-1 ;
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="GetAllRolesByUserSysNo" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  SELECT 
                  r.* ,
                  a.`Name` as ApplicationName
                  FROM smoke.Role as r
                  inner join smoke.User_Role as ur on r.SysNo = ur.RoleSysNo
                  inner join smoke.SystemApplication as a on a.ApplicationID = r.ApplicationID
                  where ur.UserSysNo = @UserSysNo And r.CommonStatus>-1 ;
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="SaveUsersRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  Set @HasRoleSysNo:= '#HasRoleSysNo#';
                  
                  Delete From smoke.User_Role
                  Where UserSysNo = @UserSysNo And FIND_IN_SET(RoleSysNo,@HasRoleSysNo) = 0 ;
                  
                  Create Temporary table My_User_Role_temp(
                  UserSysNo int,
                  RoleSysNo int 
                  );
                  
                  #InsertSql#
                  
                  INSERT INTO `smoke`.`user_role`
                  (
                  `UserSysNo`,
                  `RoleSysNo`)
                  Select * From My_User_Role_temp as t
                  Where not exists (
                  select * from `smoke`.`user_role` as ur 
                  where ur.RoleSysNo = t.RoleSysNo And ur.UserSysNo = t.UserSysNo
                  );
                  
                  drop table My_User_Role_temp
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="InsertUsersRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  #InsertSql#
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="InsertUserRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  INSERT INTO smoke.user_role
                (
                `UserSysNo`,
                `RoleSysNo`
                ) 
                VALUES 
                (
               @UserSysNo,
               @RoleSysNo
                );

                SELECT LAST_INSERT_ID() AS  SysNo;
		          ]]>
      </Text>
    </SQL>


    <!-- 删除Role信息 -->
    <SQL SQLKey="DeleteUsersRole" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                 DELETE FROM smoke.user_role
                 WHERE UserSysNo = @UserSysNo
		          ]]>
      </Text>
    </SQL>
    
    <SQL SQLKey="SaveUsersRoleByApplicationID" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  Set @HasRoleSysNo:= '#HasRoleSysNo#';
                  
                  Delete u_r From smoke.User_Role u_r
                  inner join smoke.Role r on r.SysNo = u_r.RoleSysNo
                  Where u_r.UserSysNo = @UserSysNo And FIND_IN_SET(u_r.RoleSysNo,@HasRoleSysNo) = 0 And r.ApplicationID = @ApplicationID ;
                  
                  Create Temporary table My_User_Role_temp(
                  UserSysNo int,
                  RoleSysNo int 
                  );
                  
                  #InsertSql#
                  
                  INSERT INTO `smoke`.`user_role`
                  (
                  `UserSysNo`,
                  `RoleSysNo`)
                  Select * From My_User_Role_temp as t
                  Where not exists (
                  select * from `smoke`.`user_role` as ur 
                  where ur.RoleSysNo = t.RoleSysNo And ur.UserSysNo = t.UserSysNo
                  );
                  
                  drop table My_User_Role_temp
		          ]]>
      </Text>
    </SQL>

    <SQL SQLKey="SaveRolesPermission" ConnectionKey="SMOKEWrite">
      <Text>
        <![CDATA[
                  Set @HasPermission:= '#HasPermissionSysNo#';
                  
                  Delete From smoke.Role_Syspermission
                  Where RoleSysNo = @RoleSysNo And FIND_IN_SET(PermissionSysNo,@HasPermission) = 0 ;
                  
                  Create Temporary table My_Role_Permission_temp(
                  RoleSysNo int,
                  PermissionSysNo int 
                  );
                  
                  #InsertSql#
                  
                  INSERT INTO `smoke`.`Role_Syspermission`
                  (
                  `RoleSysNo`,
                  `PermissionSysNo`)
                  Select * From My_Role_Permission_temp as t
                  Where not exists (
                  select * from `smoke`.`Role_Syspermission` as s 
                  where s.RoleSysNo = t.RoleSysNo And s.PermissionSysNo = t.PermissionSysNo
                  );
                  
                  drop table My_Role_Permission_temp
		          ]]>
      </Text>
    </SQL>

  </SQLList>
</SQLConfig>